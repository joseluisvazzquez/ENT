/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tests;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    @Test
    public void comptarElements() {
        int[] array = { 1, 2 };
        App arraytest = new App(array);
        int cantidad = arraytest.getArray().length;

        if (cantidad > 0) {

            assertEquals(2, "La cantidad de elementos es de:" + cantidad);
        } else if (cantidad == 0) {
            throw new IllegalStateException("El array esta vacio...");
        } else {
            throw new IllegalStateException("la cantidad no cuadra...");
        }
    }

    @Test
    public void retornarPrimerElement() {
        int[] array = { 1, 2, 9, 10 };
        App arraytest = new App(array);
        int cantidad = arraytest.getArray().length;

        if (cantidad > 0) {
            assertEquals(1, "El primer elemento es:" + array[0]);
        } else if (cantidad == 0) {
            throw new IllegalStateException("la cantidad no cuadra...");
        } else {
            throw new IllegalStateException("no coinciden...");

        }

    }

    public void retornarDarrerElement() {
        int[] array = { 1, 2 };
        App arraytest = new App(array);
        int cantidad = arraytest.getArray().length;

        if (cantidad > 0) {
            assertTrue(true, "El ultimo elemento es:" + array[cantidad - 1]);
        } else {
            assertFalse(true, "El array está vacío. No hay elementos...");
        }
    }

    public void retornarTercerElement() {
        int[] array = { 1, 2 };
        App arraytest = new App(array);
        int cantidad = arraytest.getArray().length;

        if (cantidad > 0) {
            System.out.println("El tercer numero es:" + array[2]);

        } else if (cantidad < 3) {
            throw new IllegalStateException("El array es menor a 3 elementos...");
        } else {
            throw new IllegalStateException("El array esta vacio...");
        }
    }

    public int sumaTotsElsElements() {
        int[] array = { 1, 2, 8 };
        App arraytest = new App(array);
        int cantidad = arraytest.getArray().length;

        int sumaTotal = 0;
        try {
            if (cantidad > 0) {

                for (int i = 0; i < cantidad; i++) {
                    sumaTotal += array[i];
                }
                assertEquals(11, sumaTotal);

            } else if (cantidad == 0) {
                throw new IllegalStateException("El array está vacío. No hay elementos...");
            } else if (sumaTotal == 0) {
                throw new IllegalStateException("la suma total no puede ser 0...");
            } else {
                throw new IllegalStateException("La suma total no es la correcta...");
            }
        } catch (IllegalStateException e) {
            // Manejar la excepción lanzada por un array vacío
            System.out.println("Se ha producido un error: " + e.getMessage());
        }
        return sumaTotal;
    }

    public void mitjanaDelsElements() {
        int[] array = { 1, 2 };
        App arraytest = new App(array);
        int cantidad = arraytest.getArray().length;
        int sumaTotal = sumaTotsElsElements();

        try {
            if (cantidad > 0) {
                int media = sumaTotal / cantidad;
                System.out.println("La suma total de todos los elementos es:" + media);

            } else if (cantidad == 0) {
                throw new IllegalStateException("El array está vacío. No hay elementos...");
            }
        } catch (IllegalStateException e) {
            // Manejar la excepción lanzada por un array vacío
            System.out.println("Se ha producido un error: " + e.getMessage());
        }
    }
}
